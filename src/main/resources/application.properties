# Application Name
spring.application.name=customer-service-api-1.0.0

# Allow Bean Definition Overriding
spring.main.allow-bean-definition-overriding=true

# Server Configuration
server.port=${PORT:8080}

# DataSource Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# OAuth2 Configuration (Google OAuth)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.redirect-uri=https://cheffest-backend-spring-production.up.railway.app/login/oauth2/code/google

# JWT Configuration for Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*

# Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.com.cheffest=DEBUG